#!/usr/bin/env node

require('colorful').colorful();
require('gnode');

var program = require('commander');
var log = require('spm-log');

var info = require('../lib/client').info;
var resolveid = require('spm-client').util.resolveid;
var print = require('../lib/utils/print');

program
  .usage('[options] name[@version]')
  .option('-r, --registry <url>', 'registry url of yuan server')
  .option('-q, --quiet', 'show less log')
  .option('--verbose', 'show more log')
  .option('--no-color', 'disable colorful print');

program.on('--help', function() {
  console.log('  ' + 'Examples:'.to.bold.blue);
  console.log();
  console.log('   $', 'apm info'.to.magenta.color, 'jquery');
  console.log('   $', 'apm info'.to.magenta.color, 'arale-class');
  console.log('   $', 'apm info'.to.magenta.color, 'arale-class@stable');
  console.log('   $', 'apm info'.to.magenta.color, 'arale-class@1.0.0');
  console.log();
});

program.parse(process.argv);

if (!program.args[0]) {
  return program.help();
}

console.log();
log.config(program);

var pkg = resolveid(program.args[0]);
if (!pkg) {
  log.error('error', 'invalid module name');
  process.exit(2);
}

info(pkg, {
  registry: program.registry
}).then(function(body) {
  print(body, program);
  console.log('');
}, function(err) {
  log.error('exit', err.message);
  console.log('');
  process.exit(2);
});
