#!/usr/bin/env node

require('colorful').colorful();

var join = require('path').join;
var exists = require('fs').existsSync;
var program = require('commander');
var spawn = require('win-spawn');
var log = require('spm-log');
var readJSON = require('fs-extra').readJSONSync;
var run = require('../lib/utils/run');

program
  .version(require('../package').version, '-v, --version')
  .usage('<command> [options]')
  .on('--help', printHelp)
  .parse(process.argv);

var subcmd = program.args[0];
var args = process.argv.slice(3);
var bin;

var aliases = {
  'ln': 'link',
  'i': 'install',
  'c': 'config',
  'p': 'publish',
  's': 'server',
  'b': 'build'
};
if (aliases[subcmd]) {
  subcmd = aliases[subcmd];
}

if (!subcmd) {
  program.help();
} else if (subcmd === 'help') {
  var helpcmd = program.args[1];
  bin = executable(helpcmd);
  if (!helpcmd || !bin) {
    process.stdout.write(program.helpInformation());
    program.emit('--help');
    process.exit(0);
  }
  wrap(spawn(bin, ['--help'], {stdio: 'inherit', customFds: [0, 1, 2]}));
} else {
  bin = executable(subcmd);
  if (bin) {
    run.record(subcmd);
    wrap(spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]}));
  } else {
    program.help();
  }
}

function wrap(sp) {
  sp.on('close', function(code) {
    process.exit(code);
  });
}

function printHelp() {
  console.log('  System Commands:'.to.bold.magenta.color);
  console.log();
  console.log('    config         configuration for apm');
  console.log('    login          login your account');
  console.log('    completion     output completion bash script');
  console.log();
  console.log('  Package Commands:'.to.bold.green.color);
  console.log();
  console.log('    init           initialize a package');
  console.log('    install        install a package');
  console.log('    publish        publish a package');
  console.log('    unpublish      unpublish a package');
  console.log('    ls             show dependencies tree');
  console.log('    info           information of a package');
  console.log('    search         search packages');
  console.log('    test           test a package');
  console.log('    doc            documentation manager');
  console.log('    build          build a package');
  console.log();
}

function executable(subcmd) {
  var file = join(__dirname, 'apm-' + subcmd);
  if (exists(file)) {
    return file;
  }
}
